@using System
@using System.Configuration
@using System.Linq
@using XProject.Web.Areas.Admin.Models
@using OfficeOpenXml.FormulaParsing.Excel.Functions.Logical
@using XProject.Domain.Entities
@using XProject.Web.Areas.Admin.Helper

@using Resources
@model System.Collections.Generic.IEnumerable<XProduct>
@{
    ViewBag.Title = Utilities.Resource("XProduct_Title", "List");

}
<div class="page-header">
    <h1>
        @ViewBag.Title
    </h1>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-4">
                @*@Html.Bootstrap().DropDownList("DropMenu", new SelectList(((List<XMenu>) ViewBag.ListMenuParent), "CurrentId", "Name")).OptionLabel("").Class("form-control").ShowValidationMessage(true)*@
            </div>
            <div class="col-sm-4">
                @Html.Bootstrap().DropDownList("DropMenuChild", new SelectList(((List<XMenu>)ViewBag.ListMenuChild), "CurrentId", "Name")).OptionLabel("").Class("form-control").ShowValidationMessage(true)
            </div>
            <div class="col-sm-4">
                <div class="clearfix">
                    <div class="pull-right tableTools-container">
                        <div class="dt-buttons btn-overlap btn-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    @if (CurrentUser.HasPermission("XProduct", "Create"))
                                    {
                                        <a href="@Url.Action("Create")" class="dt-button buttons-collection buttons-colvis btn btn-white btn-primary btn-bold" tabindex="0" aria-controls="dynamic-table" data-original-title="" title="">
                                            <span>
                                                Create New
                                            </span>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="table-responsive">
            <table class="table  table-bordered table-hover" id="table_data">
                <thead>
                    <tr>
                        <th>@Utilities.Resource("XProduct_ID", "ID")</th>
                        <th>@Utilities.Resource("XProduct_Image", "Image")</th>
                        <th>@Utilities.Resource("XProduct_Name", "Name")</th>
                        <th>@Utilities.Resource("XProduct_Menu", "Name Menu")</th>
                        <th>@Utilities.Resource("XProduct_Active", "Status")</th>
                        <th>@Utilities.Resource("XProduct_Order", "Order")</th>
                        <th style="max-width: 150px"></th>
                        <th style="max-width: 150px"></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>




        </div>

    </div>
</div>




@Html.Partial("_ListIndexAction")


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>


            <div class="modal-body showTableImg">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@Html.Script(
    @<script>

        function updatePosition(idpro, idpic) {
            $.get('@Url.Action("UpdatePosition", "XProduct")/?idpro=' + idpro + '&idpic=' + idpic, function (data) {

                getImg(data);

            });
        }
        var myFile = "";
        function UploadImg() {

            var data = new FormData();
            var files = $("#files").get(0).files;
            var idpro = $('#hdIdProduct').val();
            if (files.length > 0) {
                $.each(files, function (i, o) {
                    var file = $("#files").prop('files')[i];
                    data.append("files", file);
                });
                data.append("idPro", idpro);

            }


            $.ajax({
                url: '@Url.Action("UploadImg", "XProduct")',
                type: "POST",
                enctype: 'multipart/form-data',
                dataType: "json",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {

                    console.log(response);
                    getImg(response);

                },
                error: function (er) {

                }

            });
        }

        function getImg(idPro) {
            $.get('@Url.Action("AdGetImageById", "XProduct")/' + idPro + '', function (data) {

                $('#exampleModal').modal('show');
                $('.showTableImg').html('');
                $('.showTableImg').html(data);
                $('#hdIdProduct').val(idPro);
                $('.btnDeleteImage').on('click', function () {
                    var id = $(this).attr('rel');
                    $.get('@Url.Action("DeleteImg1", "XProduct")/' + id + '', function (data) {

                        getImg(data);
                    });
                });
                $('.btnUpload').on('click', function () {
                    UploadImg();

                });
                $('.radioOrder').on('click', function () {

                    updatePosition($(this).attr('rel'), $(this).attr('rel-pic'));
                });


            });
        }
        var idM = 0;
        $(document).on('change', '#DropMenuChild', function () {
            var id = $(this).val();
            idM = id;
            $modelTable._fnAjaxUpdate();
        });
        var $modelTable = $('#table_data').dataTable({
            fixedHeader: true,
            processing: false,
            serverSide: true,
            searching: true,
            ordering: true,
            info: false,
            stateSave: false,
            lengthMenu: [[25, 50, -1], [25, 50, "All"]],
            drawCallback: function (settings) {
                $('.mt-action-dot').popover({ trigger: "hover" });
            },
            initComplete: function () {
                $('#table_data_filter input').unbind();
                var timeOutTyping;
                $('#table_data_filter input').bind('keyup', function (e) {
                    clearTimeout(timeOutTyping);
                    timeOutTyping = setTimeout(function () {
                        $modelTable.fnFilter($('#table_data_filter input').val());
                    }, 600);
                });
                $('.btnShowImage').on('click', function () {
                    var id = $(this).attr('rel');

                    $.get('@Url.Action("AdGetImageById","XProduct")/' + id + '', function (data) {

                        $('#exampleModal').modal('show');
                        $('.showTableImg').html('');
                        $('.showTableImg').html(data);
                        $('#hdIdProduct').val(id);
                        $('.btnDeleteImage').on('click', function () {

                            var id = $(this).attr('rel');
                            $.get('@Url.Action("DeleteImg1", "XProduct")/' + id + '', function (data) {

                                getImg(data);
                            });
                        });
                        $('.btnUpload').on('click', function () {
                            UploadImg();

                        });
                        $('.radioOrder').on('click', function () {

                            updatePosition($(this).attr('rel'), $(this).attr('rel-pic'));
                        });
                    });
                });
            },
            ajax: {
                url: "/XProduct/IndexAjax",
                type: "GET",
                data: function (d) {
                    d.idMenu = idM;
                }
            },
            "columnDefs": [
                {
                    "render": function (data, type, row) {
                        return data != null ? '<img width="50" src=' + '@ConfigurationManager.AppSettings["UrlImage"]' + data.split("_")[0] + '/' + data.replace('_{0}', '_5050') + '>' : '<img width="50" src=""/>';
                    },
                    "targets": 1,
                    'className': 'text-center'
                },
                {

                    "targets": 2,
                    'className': 'text-center'
                },
                {
                    "render": function (data, type, row) {

                        return row.XMenu != null ? row.XMenu.Name : "";
                    },
                    "targets": 3,
                    'className': 'text-center'
                },
                {
                    "render": function (data, type, row) {
                        var name = "";
                        switch (data) {
                            case 1:
                                name = "Active";
                                break;
                            case 0:
                                name = "Not Active";
                                break;

                        }
                        return name;
                    },
                    "targets": 4,
                    'className': 'text-center'
                }, {
                    "render": function (data, type, row) {
                       
                        return data;
                    },
                    "targets": 5,
                    'className': 'text-center'
                },
          {
              "render": function (data, type, row) {
                  return $('#actionTemplate').html().replace(/{ID}/g, row.ID);
              },
              "targets": 6,
              'className': 'text-center'
          },
                {
                    "render": function (data, type, row) {
                        var data1 = "<a rel=\"" + row.CurrentId + "\" href=\"#\" class=\"btn btn-info btn-sm no-radius btnShowImage\"><i class=\"ace-icon fa  fa-camera\"></i><span class=\"label label-inverse arrowed-in\">" + data + "</span></a>";
                        return data1;
                    },
                    "targets": 7,
                    'className': 'text-center'
                }

            ],
            columns: [
                { "data": "ID", "orderable": true },
                { "data": "UrlImage", "orderable": true },
                { "data": "Name", "orderable": true },
                { "data": "XProduct.Name", "orderable": true },
                { "data": "Active", "orderable": true },
                { "data": "Order", "orderable": true },
                { "data": "ID", "orderable": false },
                { "data": "CountImg", "orderable": false }


            ],
            order: [[0, "asc"]]
        });




    </script>
                                                                         )

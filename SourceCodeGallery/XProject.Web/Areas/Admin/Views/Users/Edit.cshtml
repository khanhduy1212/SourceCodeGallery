@using System
@using System.Linq
@using XProject.Domain.Entities
@using XProject.Domain.Enum

@using Resources
@model XProject.Web.Areas.Admin.Models.EditUserModel

@if (!string.IsNullOrWhiteSpace(ViewBag.Message))
{
    using (Html.Bootstrap().Begin(new Alert().Style(AlertColor.Success).Closeable()))
    {
        <text>@ViewBag.Message</text>
    }
}

@{
    string saleRolesSelect = "";
    string managerRolesSelect = "";
    foreach (Role role in Model.Roles)
    {
        if (role.RoleLevel == RoleLevel.PersonalLevel)
        {
            if (saleRolesSelect != "")
            {
                saleRolesSelect += ", ";
            }
            saleRolesSelect += "input[type='checkbox'][value=" + role.ID + "]:checked";
        }
        else if (role.RoleLevel == RoleLevel.BranchLevel)
        {
            if (managerRolesSelect != "")
            {
                managerRolesSelect += ", ";
            }
            managerRolesSelect += "input[type='checkbox'][value=" + role.ID + "]:checked";
        }
    }
}
@Html.ValidationSummary()
<div class="page-header">
    <h1>
        @Resource.EditUser
    </h1>
</div>
@using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    <div class="row">
        <div class="col-xs-12">
            <div class="form-horizontal">
 

                <div class="panel panel-primary">
                    <div class="panel-heading">Information</div>
                    <div class="panel-body">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.ID <span class="required">*</span></label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().TextBoxFor(m => m.ID).Class("form-control").HtmlAttributes(new { @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.FullName</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().TextBoxFor(m => m.Username).Class("form-control").ShowValidationMessage(true)
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.Password</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().PasswordFor(m => m.Password).Class("form-control").ShowValidationMessage(true)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.ConfirmPassword</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().PasswordFor(m => m.ConfirmPassword).Class("form-control").ShowValidationMessage(true)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.Email</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().TextBoxFor(m => m.Email).Class("form-control").ShowValidationMessage(true).Readonly()
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.PhoneNumber</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().TextBoxFor(m => m.Phone).Class("form-control").ShowValidationMessage(true)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.MobileNumber</label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().TextBoxFor(m => m.MobilePhone).Class("form-control").ShowValidationMessage(true)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">@Resource.Picture</label>
                                <div class="col-sm-6">
                                    <div id="profilePicture">
                                        @if (Model.UserPicture != null)
                                        {
                                            <img style="width: 120px; height:120px;" src="~/data/user_img/@(Model.UserPicture + "?" + Guid.NewGuid().ToString())" class="img-polaroid UserLogin-picture-preview" />
                                        }
                                        else
                                        {
                                            <img style="max-width: 120px; max-height: 120px;" src="~/Areas/Admin/Display/images/profile.png" class="img-polaroid UserLogin-picture-preview" />
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right"></label>
                                <div class="col-sm-6">
                                    @Html.Bootstrap().FileFor(m => m.Picture).ShowValidationMessage(false)
                                </div>
                            </div>
                            @{
                                        bool first = true;
                                        foreach (var item in Model.Roles.Where(n => !n.Name.ToUpper().Contains("DEALER")))
                                        {
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label no-padding-right">@(first ? "Roles" : "")</label>
                                                <div class="col-sm-6">
                                                    <div class="input-list-container">
                                                        <label class="checkbox" for="SelectedRoles_0">
                                                            <input class="ace" @(Model.UserRoles.Select(m => m.ID).Contains(item.ID) ? "checked='checked'" : "") name="SelectedRoles" type="checkbox" value="@item.ID">
                                                            <span class="lbl"> @item.Name</span>
                                                        </label>
                                                    </div>
                                                   
                                                </div>
                                            </div>
                                            first = false;
                                        }
                            }

                        </div>
                    </div>
                </div>

                <div class="clearfix form-actions">
                    <div class="col-md-offset-5 col-md-7">
                        @Html.Bootstrap().ActionLinkButton(Resource.ButtonBackToList, "Index").PrependIcon(Icons.arrow_left)
                        &nbsp; &nbsp;
                        @Html.Bootstrap().SubmitButton().Id("submitbutton").Text(Resource.Edit).PrependIcon("<i class='ace-icon fa fa-check bigger-110'></i>").Style(ButtonStyle.Info)

                    </div>
                </div>
            </div>
        </div>
    </div>


    }


  
    @Html.Script(
    @<script>

        $(document).on('change', 'input[type="File"]', function () {
            var upload = $(this);

            var indicator = upload.next('.selected');
            if (indicator.length == 0) {
                indicator = $('<span class="selected"></span>').insertAfter(upload);
            }

            if (upload.val() == '') {
                indicator.html('');
            } else if (window.FileReader) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (upload[0].files[0].size > 2000000) {
                        $.sticky("@Resource.FileToLarge", { type: 'st-danger' });
                        upload.replaceWith(upload = upload.clone(true));
                    } else {
                        $('#profilePicture').html("<img style='width: 120px; height:120px;' src='" + e.target.result + "' class='img-polaroid UserLogin-picture-preview'/>");
                    }
                };
                reader.readAsDataURL(upload[0].files[0]);
            } else {
                indicator.html("Selected");
            }
        });

        $("#submitbutton").on('click', function (e) {
            e.preventDefault();
            bootbox.confirm("@Resource.ConfirmSave", function (isOK) {
                if (isOK) {
                    $('#submitbutton').parents("form").submit();
                }
            });
        });

        var cbxs = $(".checkbox");
        var ischeckSales = false;
        var ischeckManager = false;
        var roles = @Html.Serialize(Model.Roles);
        function checkrole() {
            var showSalesLevel = false;
            var showBranchLevel = false;
            for (var i = 0; i < roles.length; i++) {
                if ($("input[type='checkbox'][value='" + roles[i].ID + "']:checked").length > 0) {

                    if (roles[i].RoleLevel.Value == '@RoleLevel.PersonalLevel') {
                        showSalesLevel = true;
                    }
                    if (roles[i].RoleLevel.Value == '@RoleLevel.BranchLevel') {
                        showBranchLevel = true;
                    }
                }
            }
            if (showSalesLevel) {
                $(".SalesType").removeClass('hide');
            } else {
                $(".SalesType").addClass('hide');
            }
        }

        $(function () {
            cbxs.each(function (index, item) {
                var input = $(item).find('input');
                input.on('change', function () {
                    checkrole();
                });
            });
        });

        $(document).ready(function() {
            checkrole();
        });

    </script>
                            )

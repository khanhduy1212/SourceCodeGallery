@using System
@using System.Collections.Generic
@using System.Configuration
@using System.Globalization
@using Resources
@using XProject.Domain.Entities
@using XProject.Web.Areas.Admin.Helper
@model XCountry
@{
    var cultures = CultureInfo.GetCultures(CultureTypes.AllCultures).Where(c => c.Name.Contains("-"));
}

<div class="widget-box">
    <div class="widget-header">
        <h5 class="widget-title">@Utilities.Resource("XCountries_Title", "Infomation")</h5>
    </div>
    <div class="widget-body">
        <div class="widget-main">

            <div class="row">
                <div class="col-md-11">

                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XCountries_Select", "Select Country") </label>
                            <div class="col-md-10">
                                <select name="Value" class="selectcountry form-control">
                                    <option value></option>
                                    @foreach (var country in cultures)
                                    {
                                        var icon = country.Name.ToLower();
                                        var index = country.Name.LastIndexOf("-");
                                        if (index > 0 && index < icon.Length)
                                        {
                                            icon = icon.Substring(index + 1, icon.Length - index - 1);
                                        }
                                        <option dataimage="flag-icon flag-icon-@icon" data-name="@country.EnglishName" value="@(country.Name)" @(Model.Name == @country.Name ? "selected" : "")>
                                            @country.EnglishName
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XCountries_Code", "Code") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Code).HtmlAttributes(new {@class = "form-control"}).ShowValidationMessage(true)
                               
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XCountries_Class", "Class") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Class).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XCountries_Name", "Name") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Name).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XCountries_Active", "Status") <span class="required">*</span></label>
                            <div class="col-md-10">
                                @Html.Bootstrap().DropDownListFor(m => m.Active, new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "1", Selected = true }, new SelectListItem { Text = "Not Active", Value = "0", Selected = false } }).OptionLabel("").Class("form-control").ShowValidationMessage(false)
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10">
                                <div class="control-group">


                                    <div class="checkbox">
                                        <label>
                                            @Html.Bootstrap().CheckBoxFor(m => m.IsLangauge).HtmlAttributes(new {@class = "form-check-input"})
                                            <span class="lbl"> Translate</span>
                                        </label>
                                    </div>



                                </div>
                            </div>

                        </div>


                    </div>



                </div>

            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.Partial("_pImage", new XProject.Web.Areas.Admin.Models.UploadModel("UrlImage", Model.UrlImage, Model.UrlImage, @Utilities.Resource("XCountries_Picture", "Images")))

                </div>
            </div>

        </div>
    </div>
</div>

@Html.Script(
    @<script>
         $(".selectcountry").on('change',function() {
            var code= $(this).val();
            var name = $(this).find('option:selected').text().trim();
            var flag = $(this).find('option:selected').attr('dataimage');;
          
            $('#Name').val(name);
            $('#Code').val(code);
            $('#Class').val(flag);
         });
         function formatState(state) {
             if (!state.id) { return state.text; }
             var $state = $(
                 '<span><img style="height: 20px;width:25px;margin-top: -2px;" class="img-flag ' + state.element.getAttribute('dataimage') + '" /> ' + state.text + '</span>'
             );
             return $state;
         };

         function formatStateSelection(state) {
             if (!state.id) { return state.text; }
             var $state = $(
                 '<span style="margin-left: -10px;"><img style="height: 20px;width:25px;margin-top: -2px;" class="img-flag ' + state.element.getAttribute('dataimage') + '" /> ' + state.text + '</span>'
             );
             return $state;
         };
         $(".selectcountry").select2({
             placeholder: "@Resource.PleaseSelect",
             templateResult: formatState,
             templateSelection: formatStateSelection,
         });
         $('#validation-form').validate({
             errorElement: 'div',
             errorClass: 'help-block',
             focusInvalid: false,
             ignore: "",
             rules: {
                 Name: {
                     required: true
                 },
                 Picture: {
                     file: 'required'
                 }
             },

             messages: {
                 Name: "Name not empty.",

             },


             highlight: function (e) {

                 if ($(e).is('.file-upload')) {
                     $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
                 } else {
                     $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                 }


             },

             success: function (e) {

                 if ($(e).is('.file-upload')) {
                     $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                     $(e).parents('div').eq(1).find('.form-group .help-block').remove();
                 }
                 else {
                     $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                     $(e).closest('.form-group').find('.help-block').remove();
                 }

             },

             errorPlacement: function (error, element) {
                 
                 if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                     var controls = element.closest('div[class*="col-"]');
                     if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                     else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                 }
                 else if (element.is('.select2')) {
                     error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                 }
                 else if (element.is('.file-upload')) {
                     error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
                 }
                 else if (element.is('.chosen-select')) {
                     error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                 }
                 else error.insertAfter(element);
             },

             submitHandler: function (form) {
             },
             invalidHandler: function (form) {
             }
         });


    </script>)

@using System
@using System.Collections.Generic
@using System.Configuration
@using System.Globalization
@using Resources
@using XProject.Domain.Entities
@using XProject.Web.Areas.Admin.Helper
@model XEmail
@{
    var cultures = CultureInfo.GetCultures(CultureTypes.AllCultures).Where(c => c.Name.Contains("-"));
}

<div class="widget-box">
    <div class="widget-header">
        <h5 class="widget-title">@Utilities.Resource("XEmail_Title", "Infomation")</h5>
    </div>
    <div class="widget-body">
        <div class="widget-main">

            <div class="row">
                <div class="col-md-11">

                    <div class="col-md-12">


                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XEmail_Name", "Name") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Name).HtmlAttributes(new {@class = "form-control"}).ShowValidationMessage(true)

                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XEmail_Email", "Email") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Email).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XEmail_Phone", "Phone") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Phone).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Utilities.Resource("XEmail_Company", "Company") </label>
                            <div class="col-md-10">
                                @Html.Bootstrap().TextBoxFor(m => m.Company).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)

                            </div>
                        </div>



                    </div>



                </div>

            </div>
           
        </div>
    </div>
</div>

@Html.Script(
    @<script>
      
         $('#validation-form').validate({
             errorElement: 'div',
             errorClass: 'help-block',
             focusInvalid: false,
             ignore: "",
             rules: {
                 Name: {
                     required: true
                 }
                
             },

             messages: {
                 Name: "Name not empty.",

             },


             highlight: function (e) {

                 if ($(e).is('.file-upload')) {
                     $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
                 } else {
                     $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                 }


             },

             success: function (e) {

                 if ($(e).is('.file-upload')) {
                     $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                     $(e).parents('div').eq(1).find('.form-group .help-block').remove();
                 }
                 else {
                     $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                     $(e).closest('.form-group').find('.help-block').remove();
                 }

             },

             errorPlacement: function (error, element) {
                 
                 if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                     var controls = element.closest('div[class*="col-"]');
                     if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                     else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                 }
                 else if (element.is('.select2')) {
                     error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                 }
                 else if (element.is('.file-upload')) {
                     error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
                 }
                 else if (element.is('.chosen-select')) {
                     error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                 }
                 else error.insertAfter(element);
             },

             submitHandler: function (form) {
             },
             invalidHandler: function (form) {
             }
         });


    </script>)

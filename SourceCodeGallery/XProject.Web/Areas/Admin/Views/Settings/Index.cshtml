@using XProject.Domain.Entities
@using XProject.Domain.Enum
@using Resources
@model IEnumerable<Setting>

@{
    ViewBag.Title = Resource.Settinglist;
    var i = 0;
}

@using (Html.BeginForm())
{

    <div class="col-sm-12">
        <h3 class="row header smaller lighter blue">
            <span class="col-xs-6"> @Resource.Settings </span><!-- /.col -->
        </h3>

        <div id="accordion" class="accordion-style1 panel-group">
            @{
    List<string> group = Model.Select(j => j.Module).Distinct().ToList();
    foreach (string g in group)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapse@(g)" aria-expanded="@(i==0?"true":"false")">
                        <i class="bigger-110 ace-icon fa @(i == 0 ? "fa-angle-down" : "fa-angle-right")" data-icon-hide="ace-icon fa fa-angle-down" data-icon-show="ace-icon fa fa-angle-right"></i>
                        &nbsp;@g
                    </a>
                </h4>
            </div>

            <div class="panel-collapse collapse @(i==0?"in":"")" id="collapse@(g)" aria-expanded="@(i==0?"true":"false")" style="@(i == 0 ? "" : "height: 0px;")">
                <div class="panel-body">
                    <table class="table" id="lines-table">
                        <thead>
                            <tr>
                                <th>
                                    <b>@Html.DisplayNameFor(model => model.Name)</b>
                                </th>
                                <th>
                                    <b>@Html.DisplayNameFor(model => model.Value)</b>
                                </th>
                                <th>
                                    <b>@Html.DisplayNameFor(model => model.Description)</b>
                                </th>
                            </tr>
                        </thead>
                        @{
        List<Setting> itemsGroup = Model.Where(j => j.Module == g).ToList();
        foreach (Setting item in itemsGroup)
        {
            if (CurrentUser.HasSettingPermission(item.Module, item.Name))
            {
                <tr>
                    <td>
                        @Html.Hidden("Id", item.ID)
                        @Html.DisplayFor(modelItem => item.Summary)
                    </td>
                    <td>
                        @if (item.Type == "Dropdownlist")
                        {
                            <input type="text" id="input-sortable" name="@item.Name" class="input-sortable demo-default" value="@item.Value">
                            @*@Html.Bootstrap().DropDownList(item.Name, selectList).OptionLabel("").HtmlAttributes(new { @multiple = "multiple" }).Size(InputSize.Large).Class("form-control").Id("dropdown-contractformat")*@
                        }
                        else if (item.Type == "Checkbox")
                        {
                            
                               <div class="input-list-container">
                            <label class="checkbox" for="@item.Name">
                                <input class="ace" type="checkbox" id="@item.Name" name="@item.Name" value="@item.Value.ToLower()"  @(item.Value.ToLower().Equals("true") ? "checked" : "") />
                                <span class='lbl'></span>
                            </label>
                        </div>
                            
                        }
                        else if (item.Type == "Textbox")
                        {
                            @(item.MaxLenght > 0 ? Html.Bootstrap().TextBox(item.Name).Value(item.Value).HtmlAttributes(new { maxlength = item.MaxLenght, @class = "form-control nouc" }) : Html.Bootstrap().TextBox(item.Name).Value(item.Value).HtmlAttributes(new { @class = "form-control nouc" }))
                        }

                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                </tr>
            }
        }
                        }
                    </table>
                </div>
            </div>

        </div>
        i++;
    }
            }
        </div>
    </div>


    <div class="col-sm-12">
        @Html.Bootstrap().SubmitButton().Id("submitbutton").Text("Save").Style(ButtonStyle.Success)
    </div>
}

@Html.Script(
    @<script>

        $("#submitbutton").on('click', function (e) {
            e.preventDefault();
            bootbox.confirm("@Resource.ConfirmSave", function (isOK) {
                if (isOK) {
                    $('#submitbutton').parents("form").submit();
                }
            });
        });

        //$("#accordion").collapse();

        //$linesTable = $('#lines-table');
        //$('#add-model-btn').click(function (e) {
        //    e.preventDefault();
        //    showAddModelDialog(null, function (line) {
        //        $linesTable.find('tbody').append(parseModelToRow(line));

        //        $linesTable.show();
        //    });
        //});

        //$("#RoadTaxPeriod").selectize({
        //    delimiter: ';',
        //    persist: false,
        //    create: function (input) {
        //        return {
        //            value: input,
        //            text: input
        //        }
        //    }
        //});
    </script>)